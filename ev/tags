!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABSPRI	ev.c	1538;"	d	file:
ABSPRI	ev.c	1540;"	d	file:
ANFD	ev.c	/^} ANFD;$/;"	t	typeref:struct:__anon7	file:
ANFS	ev.c	/^} ANFS;$/;"	t	typeref:struct:__anon9	file:
ANHE	ev.c	/^  typedef WT ANHE;$/;"	t	file:
ANHE	ev.c	/^  } ANHE;$/;"	t	typeref:struct:__anon10	file:
ANHE_at	ev.c	1801;"	d	file:
ANHE_at	ev.c	1808;"	d	file:
ANHE_at_cache	ev.c	1802;"	d	file:
ANHE_at_cache	ev.c	1809;"	d	file:
ANHE_w	ev.c	1800;"	d	file:
ANHE_w	ev.c	1807;"	d	file:
ANPENDING	ev.c	/^} ANPENDING;$/;"	t	typeref:struct:__anon8	file:
ANSIG	ev.c	/^} ANSIG;$/;"	t	typeref:struct:__anon11	file:
DEF_STAT_INTERVAL	ev.c	4198;"	d	file:
DHEAP	ev.c	2234;"	d	file:
ECB_AMD64	ev.c	579;"	d	file:
ECB_AMD64_X32	ev.c	577;"	d	file:
ECB_C	ev.c	614;"	d	file:
ECB_C	ev.c	617;"	d	file:
ECB_C11	ev.c	622;"	d	file:
ECB_C99	ev.c	621;"	d	file:
ECB_CLANG_BUILTIN	ev.c	599;"	d	file:
ECB_CLANG_BUILTIN	ev.c	601;"	d	file:
ECB_CLANG_EXTENSION	ev.c	605;"	d	file:
ECB_CLANG_EXTENSION	ev.c	607;"	d	file:
ECB_CLANG_VERSION	ev.c	596;"	d	file:
ECB_CONCAT	ev.c	816;"	d	file:
ECB_CONCAT_	ev.c	815;"	d	file:
ECB_CPP	ev.c	610;"	d	file:
ECB_CPP11	ev.c	611;"	d	file:
ECB_EXTERN_C	ev.c	625;"	d	file:
ECB_EXTERN_C	ev.c	629;"	d	file:
ECB_EXTERN_C_BEG	ev.c	626;"	d	file:
ECB_EXTERN_C_BEG	ev.c	630;"	d	file:
ECB_EXTERN_C_END	ev.c	627;"	d	file:
ECB_EXTERN_C_END	ev.c	631;"	d	file:
ECB_GCC_AMD64	ev.c	571;"	d	file:
ECB_GCC_VERSION	ev.c	591;"	d	file:
ECB_GCC_VERSION	ev.c	593;"	d	file:
ECB_H	ev.c	534;"	d	file:
ECB_INFINITY	ev.c	1325;"	d	file:
ECB_INFINITY	ev.c	1327;"	d	file:
ECB_LITTLE_ENDIAN	ev.c	1143;"	d	file:
ECB_MEMORY_FENCE	ev.c	1518;"	d	file:
ECB_MEMORY_FENCE	ev.c	644;"	d	file:
ECB_MEMORY_FENCE	ev.c	659;"	d	file:
ECB_MEMORY_FENCE	ev.c	663;"	d	file:
ECB_MEMORY_FENCE	ev.c	667;"	d	file:
ECB_MEMORY_FENCE	ev.c	678;"	d	file:
ECB_MEMORY_FENCE	ev.c	681;"	d	file:
ECB_MEMORY_FENCE	ev.c	683;"	d	file:
ECB_MEMORY_FENCE	ev.c	685;"	d	file:
ECB_MEMORY_FENCE	ev.c	689;"	d	file:
ECB_MEMORY_FENCE	ev.c	693;"	d	file:
ECB_MEMORY_FENCE	ev.c	695;"	d	file:
ECB_MEMORY_FENCE	ev.c	697;"	d	file:
ECB_MEMORY_FENCE	ev.c	700;"	d	file:
ECB_MEMORY_FENCE	ev.c	702;"	d	file:
ECB_MEMORY_FENCE	ev.c	704;"	d	file:
ECB_MEMORY_FENCE	ev.c	706;"	d	file:
ECB_MEMORY_FENCE	ev.c	714;"	d	file:
ECB_MEMORY_FENCE	ev.c	720;"	d	file:
ECB_MEMORY_FENCE	ev.c	725;"	d	file:
ECB_MEMORY_FENCE	ev.c	729;"	d	file:
ECB_MEMORY_FENCE	ev.c	734;"	d	file:
ECB_MEMORY_FENCE	ev.c	739;"	d	file:
ECB_MEMORY_FENCE	ev.c	742;"	d	file:
ECB_MEMORY_FENCE	ev.c	746;"	d	file:
ECB_MEMORY_FENCE	ev.c	763;"	d	file:
ECB_MEMORY_FENCE	ev.c	781;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	1519;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	660;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	664;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	686;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	715;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	721;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	730;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	735;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	743;"	d	file:
ECB_MEMORY_FENCE_ACQUIRE	ev.c	786;"	d	file:
ECB_MEMORY_FENCE_NEEDS_PTHREADS	ev.c	778;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	1520;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	661;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	665;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	687;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	698;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	716;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	722;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	731;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	736;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	744;"	d	file:
ECB_MEMORY_FENCE_RELEASE	ev.c	790;"	d	file:
ECB_MSVC_AMD64	ev.c	572;"	d	file:
ECB_NAN	ev.c	1331;"	d	file:
ECB_NAN	ev.c	1333;"	d	file:
ECB_NEEDS_PTHREADS	ev.c	777;"	d	file:
ECB_NO_SMP	ev.c	196;"	d	file:
ECB_NO_SMP	ev.c	640;"	d	file:
ECB_NO_THREADS	ev.c	191;"	d	file:
ECB_NO_THREADS	ev.c	192;"	d	file:
ECB_PTRSIZE	ev.c	554;"	d	file:
ECB_PTRSIZE	ev.c	558;"	d	file:
ECB_PTRSIZE	ev.c	565;"	d	file:
ECB_PTRSIZE	ev.c	567;"	d	file:
ECB_STDC_VERSION	ev.c	615;"	d	file:
ECB_STDC_VERSION	ev.c	618;"	d	file:
ECB_STDFP	ev.c	1316;"	d	file:
ECB_STRINGIFY	ev.c	818;"	d	file:
ECB_STRINGIFY_	ev.c	817;"	d	file:
ECB_STRINGIFY_EXPR	ev.c	819;"	d	file:
ECB_VERSION	ev.c	537;"	d	file:
EFD_CLOEXEC	ev.c	440;"	d	file:
EFD_CLOEXEC	ev.c	442;"	d	file:
EFD_NONBLOCK	ev.c	436;"	d	file:
EMPTY	ev.c	1543;"	d	file:
EMPTY2	ev.c	1544;"	d	file:
EVBACKEND_ALL	ev.h	/^  EVBACKEND_ALL     = 0x0000003FU, \/* all known backends *\/$/;"	e	enum:__anon4
EVBACKEND_DEVPOLL	ev.h	/^  EVBACKEND_DEVPOLL = 0x00000010U, \/* solaris 8 *\/ \/* NYI *\/$/;"	e	enum:__anon4
EVBACKEND_EPOLL	ev.h	/^  EVBACKEND_EPOLL   = 0x00000004U, \/* linux *\/$/;"	e	enum:__anon4
EVBACKEND_KQUEUE	ev.h	/^  EVBACKEND_KQUEUE  = 0x00000008U, \/* bsd *\/$/;"	e	enum:__anon4
EVBACKEND_MASK	ev.h	/^  EVBACKEND_MASK    = 0x0000FFFFU  \/* all future backends *\/$/;"	e	enum:__anon4
EVBACKEND_POLL	ev.h	/^  EVBACKEND_POLL    = 0x00000002U, \/* !win *\/$/;"	e	enum:__anon4
EVBACKEND_PORT	ev.h	/^  EVBACKEND_PORT    = 0x00000020U, \/* solaris 10 *\/$/;"	e	enum:__anon4
EVBACKEND_SELECT	ev.h	/^  EVBACKEND_SELECT  = 0x00000001U, \/* about anywhere *\/$/;"	e	enum:__anon4
EVBREAK_ALL	ev.h	/^  EVBREAK_ALL    = 2  \/* unloop all loops *\/$/;"	e	enum:__anon6
EVBREAK_CANCEL	ev.h	/^  EVBREAK_CANCEL = 0, \/* undo unloop *\/$/;"	e	enum:__anon6
EVBREAK_ONE	ev.h	/^  EVBREAK_ONE    = 1, \/* unloop once *\/$/;"	e	enum:__anon6
EVBREAK_RECURSE	ev.c	1848;"	d	file:
EVENT_FD	event.h	108;"	d
EVENT_H_	event.h	41;"	d
EVENT_SIGNAL	event.h	107;"	d
EVENT_STRINGIFY	event.c	78;"	d	file:
EVENT_VERSION	event.c	79;"	d	file:
EVFLAG_AUTO	ev.h	/^  EVFLAG_AUTO      = 0x00000000U, \/* not quite a mask *\/$/;"	e	enum:__anon3
EVFLAG_FORKCHECK	ev.h	/^  EVFLAG_FORKCHECK = 0x02000000U, \/* check for a fork in each iteration *\/$/;"	e	enum:__anon3
EVFLAG_NOENV	ev.h	/^  EVFLAG_NOENV     = 0x01000000U, \/* do NOT consult environment *\/$/;"	e	enum:__anon3
EVFLAG_NOINOTIFY	ev.h	/^  EVFLAG_NOINOTIFY = 0x00100000U, \/* do not attempt to use inotify *\/$/;"	e	enum:__anon3
EVFLAG_NOSIGFD	ev.h	/^  EVFLAG_NOSIGFD   = 0, \/* compatibility to pre-3.9 *\/$/;"	e	enum:__anon3
EVFLAG_NOSIGMASK	ev.h	/^  EVFLAG_NOSIGMASK = 0x00400000U  \/* avoid modifying the signal mask *\/$/;"	e	enum:__anon3
EVFLAG_SIGNALFD	ev.h	/^  EVFLAG_SIGNALFD  = 0x00200000U, \/* attempt to use signalfd *\/$/;"	e	enum:__anon3
EVLIST_ACTIVE	event.h	74;"	d
EVLIST_INIT	event.h	76;"	d
EVLIST_INSERTED	event.h	72;"	d
EVLIST_INTERNAL	event.h	75;"	d
EVLIST_SIGNAL	event.h	73;"	d
EVLIST_TIMEOUT	event.h	71;"	d
EVLOOP_NONBLOCK	ev.h	829;"	d
EVLOOP_NONBLOCK	event.h	50;"	d
EVLOOP_ONCE	event.h	136;"	d
EVLOOP_ONESHOT	ev.h	830;"	d
EVLOOP_ONESHOT	event.h	53;"	d
EVRUN_NOWAIT	ev.h	/^  EVRUN_NOWAIT = 1, \/* do not block\/wait *\/$/;"	e	enum:__anon5
EVRUN_ONCE	ev.h	/^  EVRUN_ONCE   = 2  \/* block *once* only *\/$/;"	e	enum:__anon5
EVUNLOOP_ALL	ev.h	833;"	d
EVUNLOOP_CANCEL	ev.h	831;"	d
EVUNLOOP_ONE	ev.h	832;"	d
EV_A	ev.h	175;"	d
EV_A	ev.h	184;"	d
EV_ACQUIRE_CB	ev.c	1840;"	d	file:
EV_ACQUIRE_CB	ev.c	1844;"	d	file:
EV_ANFD_REIFY	ev.c	1756;"	d	file:
EV_API_DECL	ev.h	201;"	d
EV_API_DECL	ev.h	203;"	d
EV_ASYNC	ev.h	/^  EV_ASYNC    =      0x00080000, \/* async intra-loop signal *\/$/;"	e	enum:__anon2
EV_ASYNC_ENABLE	ev.h	133;"	d
EV_ATOMIC_T	ev.h	159;"	d
EV_AVOID_STDIO	ev.c	211;"	d	file:
EV_A_	ev.h	176;"	d
EV_A_	ev.h	185;"	d
EV_CB	ev.h	256;"	d
EV_CB_DECLARE	ev.h	249;"	d
EV_CB_INVOKE	ev.h	252;"	d
EV_CHECK	ev.h	/^  EV_CHECK    =      0x00008000, \/* event loop finished poll *\/$/;"	e	enum:__anon2
EV_CHECK_ENABLE	ev.h	105;"	d
EV_CHILD	ev.h	/^  EV_CHILD    =      0x00000800, \/* child\/pid had status change *\/$/;"	e	enum:__anon2
EV_CHILD_ENABLE	ev.h	126;"	d
EV_CLEANUP	ev.h	/^  EV_CLEANUP  =      0x00040000, \/* event loop resumed in child *\/$/;"	e	enum:__anon2
EV_CLEANUP_ENABLE	ev.h	117;"	d
EV_COMMON	ev.h	245;"	d
EV_COMPAT3	ev.h	61;"	d
EV_CPP	ev.h	44;"	d
EV_CPP	ev.h	51;"	d
EV_CUSTOM	ev.h	/^  EV_CUSTOM   =      0x01000000, \/* for use by user code *\/$/;"	e	enum:__anon2
EV_DECL_PRIORITY	ev.h	276;"	d
EV_DECL_PRIORITY	ev.h	278;"	d
EV_DEFAULT	ev.h	179;"	d
EV_DEFAULT	ev.h	186;"	d
EV_DEFAULT_	ev.h	180;"	d
EV_DEFAULT_	ev.h	187;"	d
EV_DEFAULT_UC	ev.h	177;"	d
EV_DEFAULT_UC	ev.h	188;"	d
EV_DEFAULT_UC_	ev.h	178;"	d
EV_DEFAULT_UC_	ev.h	189;"	d
EV_EMASK_EPERM	ev_epoll.c	68;"	d	file:
EV_EMBED	ev.h	/^  EV_EMBED    =      0x00010000, \/* embedded event loop needs sweep *\/$/;"	e	enum:__anon2
EV_EMBED_ENABLE	ev.h	137;"	d
EV_EMBED_ENABLE	ev.h	190;"	d
EV_ENABLE	ev_kqueue.c	57;"	d	file:
EV_ERROR	ev.h	/^  EV_ERROR    = (int)0x80000000  \/* sent when an error occurs *\/$/;"	e	enum:__anon2
EV_ERROR	ev_kqueue.c	213;"	d	file:
EV_ET	event.h	105;"	d
EV_FD_TO_WIN32_HANDLE	ev.c	1564;"	d	file:
EV_FEATURES	ev.h	66;"	d
EV_FEATURE_API	ev.h	75;"	d
EV_FEATURE_BACKENDS	ev.h	77;"	d
EV_FEATURE_CODE	ev.h	72;"	d
EV_FEATURE_CONFIG	ev.h	74;"	d
EV_FEATURE_DATA	ev.h	73;"	d
EV_FEATURE_OS	ev.h	78;"	d
EV_FEATURE_WATCHERS	ev.h	76;"	d
EV_FORK	ev.h	/^  EV_FORK     =      0x00020000, \/* event loop resumed in child *\/$/;"	e	enum:__anon2
EV_FORK_ENABLE	ev.h	113;"	d
EV_FREQUENT_CHECK	ev.c	473;"	d	file:
EV_FREQUENT_CHECK	ev.c	475;"	d	file:
EV_HEAP_CACHE_AT	ev.c	365;"	d	file:
EV_H_	ev.h	41;"	d
EV_IDLE	ev.h	/^  EV_IDLE     =      0x00002000, \/* event loop is idling *\/$/;"	e	enum:__anon2
EV_IDLE_ENABLE	ev.h	109;"	d
EV_INLINE	ev.h	195;"	d
EV_INLINE	ev.h	197;"	d
EV_INOTIFY_BUFSIZE	ev.c	4207;"	d	file:
EV_INOTIFY_HASHSIZE	ev.c	331;"	d	file:
EV_INVOKE_PENDING	ev.c	1841;"	d	file:
EV_INVOKE_PENDING	ev.c	1845;"	d	file:
EV_IO	ev.h	/^  EV_IO       =         EV_READ, \/* alias for type-detection *\/$/;"	e	enum:__anon2
EV_LSTAT	ev.c	4440;"	d	file:
EV_LSTAT	ev.c	4442;"	d	file:
EV_MAXPRI	ev.h	85;"	d
EV_MINPRI	ev.h	82;"	d
EV_MULTIPLICITY	ev.h	89;"	d
EV_NONE	ev.h	/^  EV_NONE     =            0x00, \/* no events *\/$/;"	e	enum:__anon2
EV_NO_SMP	ev.c	189;"	d	file:
EV_NO_SMP	ev.c	190;"	d	file:
EV_NO_SMP	ev.c	195;"	d	file:
EV_NSIG	ev.c	228;"	d	file:
EV_NSIG	ev.c	230;"	d	file:
EV_NSIG	ev.c	232;"	d	file:
EV_NSIG	ev.c	234;"	d	file:
EV_NSIG	ev.c	236;"	d	file:
EV_NSIG	ev.c	238;"	d	file:
EV_NSIG	ev.c	240;"	d	file:
EV_NSIG	ev.c	242;"	d	file:
EV_NSIG	ev.c	244;"	d	file:
EV_NSIG	ev.c	246;"	d	file:
EV_P	ev.c	/^  EV_P;$/;"	m	struct:__anon11	file:
EV_P	ev.h	173;"	d
EV_P	ev.h	182;"	d
EV_PERIODIC	ev.h	/^  EV_PERIODIC =      0x00000200, \/* periodic timer timed out *\/$/;"	e	enum:__anon2
EV_PERIODIC_ENABLE	ev.h	93;"	d
EV_PERSIST	event.h	104;"	d
EV_PID_HASHSIZE	ev.c	327;"	d	file:
EV_PREPARE	ev.h	/^  EV_PREPARE  =      0x00004000, \/* event loop about to poll *\/$/;"	e	enum:__anon2
EV_PREPARE_ENABLE	ev.h	101;"	d
EV_PROTOTYPES	ev.h	208;"	d
EV_P_	ev.h	174;"	d
EV_P_	ev.h	183;"	d
EV_READ	ev.h	/^  EV_READ     =            0x01, \/* ev_io detected read will not block *\/$/;"	e	enum:__anon2
EV_READ	event.h	102;"	d
EV_RELEASE_CB	ev.c	1839;"	d	file:
EV_RELEASE_CB	ev.c	1843;"	d	file:
EV_SELECT_IS_WINSOCKET	ev.c	209;"	d	file:
EV_SELECT_USE_FD_SET	ev_select.c	51;"	d	file:
EV_SELECT_USE_FD_SET	ev_select.c	53;"	d	file:
EV_SELECT_USE_FD_SET	ev_select.c	58;"	d	file:
EV_SELECT_USE_FD_SET	ev_select.c	59;"	d	file:
EV_SIGNAL	ev.h	/^  EV_SIGNAL   =      0x00000400, \/* signal was received *\/$/;"	e	enum:__anon2
EV_SIGNAL_ENABLE	ev.h	121;"	d
EV_SIGNAL_ENABLE	ev.h	147;"	d
EV_SIGNAL_ENABLE	ev.h	148;"	d
EV_STAT	ev.h	/^  EV_STAT     =      0x00001000, \/* stat data changed *\/$/;"	e	enum:__anon2
EV_STAT_ENABLE	ev.h	97;"	d
EV_THROW	ev.h	/^  ev_tstamp (*reschedule_cb)(struct ev_periodic *w, ev_tstamp now) EV_THROW; \/* rw *\/$/;"	m	struct:ev_periodic
EV_THROW	ev.h	46;"	d
EV_THROW	ev.h	48;"	d
EV_THROW	ev.h	52;"	d
EV_TIMEOUT	ev.h	/^  EV_TIMEOUT  =        EV_TIMER, \/* pre 4.0 API compatibility *\/$/;"	e	enum:__anon2
EV_TIMEOUT	event.h	56;"	d
EV_TIMER	ev.h	/^  EV_TIMER    =      0x00000100, \/* timer timed out *\/$/;"	e	enum:__anon2
EV_TS_SET	ev.c	489;"	d	file:
EV_TV_SET	ev.c	488;"	d	file:
EV_UNDEF	ev.h	/^  EV_UNDEF    = (int)0xFFFFFFFF, \/* guaranteed to be invalid *\/$/;"	e	enum:__anon2
EV_USE_4HEAP	ev.c	361;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	255;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	257;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	373;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	374;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	393;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	394;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	56;"	d	file:
EV_USE_CLOCK_SYSCALL	ev.c	65;"	d	file:
EV_USE_EPOLL	ev.c	113;"	d	file:
EV_USE_EPOLL	ev.c	116;"	d	file:
EV_USE_EPOLL	ev.c	117;"	d	file:
EV_USE_EPOLL	ev.c	304;"	d	file:
EV_USE_EPOLL	ev.c	306;"	d	file:
EV_USE_EVENTFD	ev.c	158;"	d	file:
EV_USE_EVENTFD	ev.c	161;"	d	file:
EV_USE_EVENTFD	ev.c	162;"	d	file:
EV_USE_EVENTFD	ev.c	336;"	d	file:
EV_USE_EVENTFD	ev.c	338;"	d	file:
EV_USE_FLOOR	ev.c	250;"	d	file:
EV_USE_FLOOR	ev.c	50;"	d	file:
EV_USE_INOTIFY	ev.c	140;"	d	file:
EV_USE_INOTIFY	ev.c	143;"	d	file:
EV_USE_INOTIFY	ev.c	144;"	d	file:
EV_USE_INOTIFY	ev.c	320;"	d	file:
EV_USE_INOTIFY	ev.c	322;"	d	file:
EV_USE_INOTIFY	ev.c	411;"	d	file:
EV_USE_INOTIFY	ev.c	412;"	d	file:
EV_USE_INOTIFY	ev.c	427;"	d	file:
EV_USE_INOTIFY	ev.c	428;"	d	file:
EV_USE_KQUEUE	ev.c	122;"	d	file:
EV_USE_KQUEUE	ev.c	125;"	d	file:
EV_USE_KQUEUE	ev.c	126;"	d	file:
EV_USE_KQUEUE	ev.c	311;"	d	file:
EV_USE_MONOTONIC	ev.c	263;"	d	file:
EV_USE_MONOTONIC	ev.c	272;"	d	file:
EV_USE_MONOTONIC	ev.c	274;"	d	file:
EV_USE_MONOTONIC	ev.c	390;"	d	file:
EV_USE_MONOTONIC	ev.c	391;"	d	file:
EV_USE_MONOTONIC	ev.c	401;"	d	file:
EV_USE_MONOTONIC	ev.c	402;"	d	file:
EV_USE_MONOTONIC	ev.c	61;"	d	file:
EV_USE_MONOTONIC	ev.c	70;"	d	file:
EV_USE_MONOTONIC	ev.c	77;"	d	file:
EV_USE_NANOSLEEP	ev.c	284;"	d	file:
EV_USE_NANOSLEEP	ev.c	286;"	d	file:
EV_USE_NANOSLEEP	ev.c	86;"	d	file:
EV_USE_NANOSLEEP	ev.c	89;"	d	file:
EV_USE_NANOSLEEP	ev.c	90;"	d	file:
EV_USE_POLL	ev.c	104;"	d	file:
EV_USE_POLL	ev.c	107;"	d	file:
EV_USE_POLL	ev.c	108;"	d	file:
EV_USE_POLL	ev.c	296;"	d	file:
EV_USE_POLL	ev.c	298;"	d	file:
EV_USE_POLL	ev.c	380;"	d	file:
EV_USE_POLL	ev.c	381;"	d	file:
EV_USE_PORT	ev.c	131;"	d	file:
EV_USE_PORT	ev.c	134;"	d	file:
EV_USE_PORT	ev.c	135;"	d	file:
EV_USE_PORT	ev.c	315;"	d	file:
EV_USE_REALTIME	ev.c	266;"	d	file:
EV_USE_REALTIME	ev.c	279;"	d	file:
EV_USE_REALTIME	ev.c	406;"	d	file:
EV_USE_REALTIME	ev.c	407;"	d	file:
EV_USE_REALTIME	ev.c	58;"	d	file:
EV_USE_REALTIME	ev.c	73;"	d	file:
EV_USE_REALTIME	ev.c	80;"	d	file:
EV_USE_SELECT	ev.c	291;"	d	file:
EV_USE_SELECT	ev.c	370;"	d	file:
EV_USE_SELECT	ev.c	371;"	d	file:
EV_USE_SELECT	ev.c	95;"	d	file:
EV_USE_SELECT	ev.c	98;"	d	file:
EV_USE_SELECT	ev.c	99;"	d	file:
EV_USE_SIGNALFD	ev.c	149;"	d	file:
EV_USE_SIGNALFD	ev.c	152;"	d	file:
EV_USE_SIGNALFD	ev.c	153;"	d	file:
EV_USE_SIGNALFD	ev.c	344;"	d	file:
EV_USE_SIGNALFD	ev.c	346;"	d	file:
EV_VERIFY	ev.c	357;"	d	file:
EV_VERSION_MAJOR	ev.h	213;"	d
EV_VERSION_MINOR	ev.h	214;"	d
EV_WALK_ENABLE	ev.h	141;"	d
EV_WATCHER	ev.h	282;"	d
EV_WATCHER_LIST	ev.h	289;"	d
EV_WATCHER_TIME	ev.h	293;"	d
EV_WIN32_CLOSE_FD	ev.c	1570;"	d	file:
EV_WIN32_HANDLE_TO_FD	ev.c	1567;"	d	file:
EV_WRAP_H	ev_wrap.h	102;"	d
EV_WRAP_H	ev_wrap.h	3;"	d
EV_WRITE	ev.h	/^  EV_WRITE    =            0x02, \/* ev_io detected write will not block *\/$/;"	e	enum:__anon2
EV_WRITE	event.h	103;"	d
EV__IOFDSET	ev.h	/^  EV__IOFDSET =            0x80, \/* internal use only *\/$/;"	e	enum:__anon2
HAVE_CLOCK_GETTIME	config.h	5;"	d
HAVE_DLFCN_H	config.h	11;"	d
HAVE_EPOLL_CTL	config.h	14;"	d
HAVE_EVENTFD	config.h	17;"	d
HAVE_FLOOR	config.h	20;"	d
HAVE_INOTIFY_INIT	config.h	23;"	d
HAVE_INTTYPES_H	config.h	26;"	d
HAVE_MEMORY_H	config.h	35;"	d
HAVE_NANOSLEEP	config.h	38;"	d
HAVE_POLL	config.h	41;"	d
HAVE_POLL_H	config.h	44;"	d
HAVE_SELECT	config.h	53;"	d
HAVE_SIGNALFD	config.h	56;"	d
HAVE_STDINT_H	config.h	59;"	d
HAVE_STDLIB_H	config.h	62;"	d
HAVE_STRINGS_H	config.h	65;"	d
HAVE_STRING_H	config.h	68;"	d
HAVE_SYS_EPOLL_H	config.h	71;"	d
HAVE_SYS_EVENTFD_H	config.h	74;"	d
HAVE_SYS_INOTIFY_H	config.h	80;"	d
HAVE_SYS_SELECT_H	config.h	83;"	d
HAVE_SYS_SIGNALFD_H	config.h	86;"	d
HAVE_SYS_STAT_H	config.h	89;"	d
HAVE_SYS_TYPES_H	config.h	92;"	d
HAVE_UNISTD_H	config.h	95;"	d
HEAP0	ev.c	2235;"	d	file:
HEAP0	ev.c	2285;"	d	file:
HPARENT	ev.c	2236;"	d	file:
HPARENT	ev.c	2286;"	d	file:
LT_OBJDIR	config.h	98;"	d
MALLOC_ROUND	ev.c	1920;"	d	file:
MAX_BLOCKTIME	ev.c	486;"	d	file:
MIN_INTERVAL	ev.c	482;"	d	file:
MIN_STAT_INTERVAL	ev.c	4200;"	d	file:
MIN_TIMEJUMP	ev.c	485;"	d	file:
NFDBITS	ev_select.c	60;"	d	file:
NFDBITS	ev_select.c	61;"	d	file:
NFDBYTES	ev_select.c	65;"	d	file:
NFS_STAT_INTERVAL	ev.c	4199;"	d	file:
NOTE_EOF	ev_kqueue.c	60;"	d	file:
NUMPRI	ev.c	1535;"	d	file:
PACKAGE	config.h	101;"	d
PACKAGE_BUGREPORT	config.h	104;"	d
PACKAGE_NAME	config.h	107;"	d
PACKAGE_STRING	config.h	110;"	d
PACKAGE_TARNAME	config.h	113;"	d
PACKAGE_URL	config.h	116;"	d
PACKAGE_VERSION	config.h	119;"	d
SA_RESTART	ev.c	4029;"	d	file:
SFD_CLOEXEC	ev.c	456;"	d	file:
SFD_CLOEXEC	ev.c	458;"	d	file:
SFD_NONBLOCK	ev.c	452;"	d	file:
STDC_HEADERS	config.h	122;"	d
T	ev.c	/^  template<typename T, int N>$/;"	v
UPHEAP_DONE	ev.c	2237;"	d	file:
UPHEAP_DONE	ev.c	2287;"	d	file:
VAR	ev.c	1818;"	d	file:
VAR	ev.c	1820;"	d	file:
VAR	ev.c	1830;"	d	file:
VAR	ev.c	1832;"	d	file:
VARx	ev_vars.h	203;"	d
VARx	ev_vars.h	40;"	d
VERSION	config.h	125;"	d
W	ev.c	/^typedef ev_watcher *W;$/;"	t	file:
WCONTINUED	ev.c	2648;"	d	file:
WIFCONTINUED	ev.c	2624;"	d	file:
WIN32_LEAN_AND_MEAN	ev.c	205;"	d	file:
WL	ev.c	/^typedef ev_watcher_list *WL;$/;"	t	file:
WT	ev.c	/^typedef ev_watcher_time *WT;$/;"	t	file:
_DARWIN_UNLIMITED_SELECT	ev.c	220;"	d	file:
_EVENT_LOG_DEBUG	event.h	141;"	d
_EVENT_LOG_ERR	event.h	144;"	d
_EVENT_LOG_MSG	event.h	142;"	d
_EVENT_LOG_WARN	event.h	143;"	d
acquire_cb	ev_wrap.h	103;"	d
acquire_cb	ev_wrap.h	4;"	d
activecnt	ev_wrap.h	104;"	d
activecnt	ev_wrap.h	5;"	d
adjustheap	ev.c	/^adjustheap (ANHE *heap, int N, int k)$/;"	f
anfdmax	ev_wrap.h	105;"	d
anfdmax	ev_wrap.h	6;"	d
anfds	ev_wrap.h	106;"	d
anfds	ev_wrap.h	7;"	d
arg	ev.c	/^  void *arg;$/;"	m	struct:ev_once	file:
arg	event.c	/^  void *arg;$/;"	m	struct:ev_x_once	file:
array_free	ev.c	1974;"	d	file:
array_init_zero	ev.c	1952;"	d	file:
array_needsize	ev.c	1955;"	d	file:
array_nextsize	ev.c	/^array_nextsize (int elem, int cur, int cnt)$/;"	f
array_realloc	ev.c	/^array_realloc (int elem, void *base, int *cur, int cnt)$/;"	f	file:
array_verify	ev.c	/^array_verify (EV_P_ W *ws, int cnt)$/;"	f	file:
async	ev.h	/^  struct ev_async async;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_async
async_pending	ev_wrap.h	107;"	d
async_pending	ev_wrap.h	8;"	d
asynccnt	ev_wrap.h	108;"	d
asynccnt	ev_wrap.h	9;"	d
asyncmax	ev_wrap.h	109;"	d
asyncmax	ev_wrap.h	10;"	d
asyncs	ev_wrap.h	110;"	d
asyncs	ev_wrap.h	11;"	d
at	ev.c	/^    ev_tstamp at;$/;"	m	struct:__anon10	file:
attr	ev.h	/^  ev_statdata attr;   \/* ro *\/$/;"	m	struct:ev_stat
backend	ev_wrap.h	111;"	d
backend	ev_wrap.h	12;"	d
backend_fd	ev_wrap.h	112;"	d
backend_fd	ev_wrap.h	13;"	d
backend_mintime	ev_wrap.h	113;"	d
backend_mintime	ev_wrap.h	14;"	d
backend_modify	ev_wrap.h	114;"	d
backend_modify	ev_wrap.h	15;"	d
backend_poll	ev_wrap.h	115;"	d
backend_poll	ev_wrap.h	16;"	d
cb	ev.c	/^  void (*cb)(int revents, void *arg);$/;"	m	struct:ev_once	file:
cb	event.c	/^  void (*cb)(int, short, void *);$/;"	m	struct:ev_x_once	file:
check	ev.h	/^  ev_check check;        \/* unused *\/$/;"	m	struct:ev_embed
check	ev.h	/^  struct ev_check check;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_check
checkcnt	ev_wrap.h	116;"	d
checkcnt	ev_wrap.h	17;"	d
checkmax	ev_wrap.h	117;"	d
checkmax	ev_wrap.h	18;"	d
checks	ev_wrap.h	118;"	d
checks	ev_wrap.h	19;"	d
child	ev.h	/^  struct ev_child child;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_child
child_reap	ev.c	/^child_reap (EV_P_ int chain, int pid, int status)$/;"	f
childcb	ev.c	/^childcb (EV_P_ ev_signal *sw, int revents)$/;"	f	file:
childev	ev.c	/^static ev_signal childev;$/;"	v	file:
childs	ev.c	/^static WL childs [EV_PID_HASHSIZE];$/;"	v	file:
cleanup	ev.h	/^  ev_cleanup cleanup;    \/* unused *\/$/;"	m	struct:ev_embed
cleanup	ev.h	/^  struct ev_cleanup cleanup;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_cleanup
cleanupcnt	ev_wrap.h	119;"	d
cleanupcnt	ev_wrap.h	20;"	d
cleanupmax	ev_wrap.h	120;"	d
cleanupmax	ev_wrap.h	21;"	d
cleanups	ev_wrap.h	121;"	d
cleanups	ev_wrap.h	22;"	d
clear_pending	ev.c	/^clear_pending (EV_P_ W w)$/;"	f
clock_gettime	ev.c	389;"	d	file:
curpid	ev_wrap.h	122;"	d
curpid	ev_wrap.h	23;"	d
dLOOPbase	event.c	52;"	d	file:
dLOOPbase	event.c	55;"	d	file:
dLOOPev	event.c	51;"	d	file:
dLOOPev	event.c	54;"	d	file:
default_loop_struct	ev.c	/^  static struct ev_loop default_loop_struct;$/;"	v	typeref:struct:ev_loop	file:
downheap	ev.c	/^downheap (ANHE *heap, int N, int k)$/;"	f
dummy	event.c	/^  int dummy;$/;"	m	struct:event_base	file:
ecb_array_length	ev.c	1194;"	d	file:
ecb_artificial	ev.c	897;"	d	file:
ecb_artificial	ev.c	901;"	d	file:
ecb_assume	ev.c	1129;"	d	file:
ecb_attribute	ev.c	824;"	d	file:
ecb_attribute	ev.c	826;"	d	file:
ecb_big_endian	ev.c	/^ecb_inline ecb_const ecb_bool ecb_big_endian    (void) { return ecb_byteorder_helper () == 0x11223344; }$/;"	f
ecb_binary16_to_binary32	ev.c	/^ecb_binary16_to_binary32 (uint32_t x)$/;"	f
ecb_binary16_to_float	ev.c	/^  ecb_binary16_to_float (uint16_t x)$/;"	f
ecb_binary32_to_binary16	ev.c	/^ecb_binary32_to_binary16 (uint32_t x)$/;"	f
ecb_binary32_to_float	ev.c	/^  ecb_binary32_to_float (uint32_t x)$/;"	f
ecb_binary64_to_double	ev.c	/^  ecb_binary64_to_double (uint64_t x)$/;"	f
ecb_bitrev16	ev.c	/^ecb_function_ ecb_const uint16_t ecb_bitrev16 (uint16_t x)$/;"	f
ecb_bitrev32	ev.c	/^ecb_function_ ecb_const uint32_t ecb_bitrev32 (uint32_t x)$/;"	f
ecb_bitrev8	ev.c	/^ecb_function_ ecb_const uint8_t  ecb_bitrev8  (uint8_t  x)$/;"	f
ecb_bool	ev.c	/^typedef int ecb_bool;$/;"	t	file:
ecb_bswap16	ev.c	/^  ecb_bswap16 (uint16_t x)$/;"	f
ecb_bswap16	ev.c	1086;"	d	file:
ecb_bswap16	ev.c	1088;"	d	file:
ecb_bswap16	ev.c	1094;"	d	file:
ecb_bswap32	ev.c	/^  ecb_bswap32 (uint32_t x)$/;"	f
ecb_bswap32	ev.c	1090;"	d	file:
ecb_bswap32	ev.c	1095;"	d	file:
ecb_bswap64	ev.c	/^  ecb_bswap64 (uint64_t x)$/;"	f
ecb_bswap64	ev.c	1091;"	d	file:
ecb_bswap64	ev.c	1096;"	d	file:
ecb_byteorder_helper	ev.c	/^ecb_byteorder_helper (void)$/;"	f
ecb_cold	ev.c	899;"	d	file:
ecb_cold	ev.c	903;"	d	file:
ecb_const	ev.c	881;"	d	file:
ecb_ctz32	ev.c	/^  ecb_ctz32 (uint32_t x)$/;"	f
ecb_ctz32	ev.c	923;"	d	file:
ecb_ctz64	ev.c	/^  ecb_ctz64 (uint64_t x)$/;"	f
ecb_ctz64	ev.c	924;"	d	file:
ecb_decltype	ev.c	855;"	d	file:
ecb_decltype	ev.c	857;"	d	file:
ecb_decltype_t	ev.c	/^  template<class T> struct ecb_decltype_t { typedef T type; };$/;"	s	file:
ecb_deprecated	ev.c	861;"	d	file:
ecb_deprecated	ev.c	863;"	d	file:
ecb_deprecated_message	ev.c	867;"	d	file:
ecb_deprecated_message	ev.c	869;"	d	file:
ecb_deprecated_message	ev.c	871;"	d	file:
ecb_div_rd	ev.c	/^  static inline T ecb_div_rd (T val, T div)$/;"	f	file:
ecb_div_rd	ev.c	1182;"	d	file:
ecb_div_ru	ev.c	/^  static inline T ecb_div_ru (T val, T div)$/;"	f	file:
ecb_div_ru	ev.c	1183;"	d	file:
ecb_double_to_binary64	ev.c	/^  ecb_double_to_binary64 (double x)$/;"	f
ecb_expect	ev.c	840;"	d	file:
ecb_expect	ev.c	842;"	d	file:
ecb_expect_false	ev.c	909;"	d	file:
ecb_expect_true	ev.c	910;"	d	file:
ecb_float_to_binary16	ev.c	/^  ecb_float_to_binary16 (float x)$/;"	f
ecb_float_to_binary32	ev.c	/^  ecb_float_to_binary32 (float x)$/;"	f
ecb_frexpf	ev.c	1338;"	d	file:
ecb_frexpf	ev.c	1341;"	d	file:
ecb_function_	ev.c	821;"	d	file:
ecb_hot	ev.c	898;"	d	file:
ecb_hot	ev.c	902;"	d	file:
ecb_inline	ev.c	796;"	d	file:
ecb_inline	ev.c	798;"	d	file:
ecb_inline	ev.c	800;"	d	file:
ecb_inline	ev.c	802;"	d	file:
ecb_is_constant	ev.c	830;"	d	file:
ecb_is_constant	ev.c	836;"	d	file:
ecb_is_pot32	ev.c	/^ecb_function_ ecb_const ecb_bool ecb_is_pot32 (uint32_t x) { return !(x & (x - 1)); }$/;"	f
ecb_is_pot64	ev.c	/^ecb_function_ ecb_const ecb_bool ecb_is_pot64 (uint64_t x) { return !(x & (x - 1)); }$/;"	f
ecb_ld32	ev.c	/^  ecb_function_ ecb_const int ecb_ld32 (uint32_t x)$/;"	f
ecb_ld32	ev.c	921;"	d	file:
ecb_ld64	ev.c	/^  ecb_function_ ecb_const int ecb_ld64 (uint64_t x)$/;"	f
ecb_ld64	ev.c	922;"	d	file:
ecb_ldexpf	ev.c	1337;"	d	file:
ecb_ldexpf	ev.c	1340;"	d	file:
ecb_likely	ev.c	912;"	d	file:
ecb_little_endian	ev.c	/^ecb_inline ecb_const ecb_bool ecb_little_endian (void) { return ecb_byteorder_helper () == 0x44332211; }$/;"	f
ecb_mf_lock	ev.c	/^    static pthread_mutex_t ecb_mf_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
ecb_mod	ev.c	1165;"	d	file:
ecb_mod	ev.c	1167;"	d	file:
ecb_noinline	ev.c	875;"	d	file:
ecb_noinline	ev.c	877;"	d	file:
ecb_noreturn	ev.c	886;"	d	file:
ecb_noreturn	ev.c	888;"	d	file:
ecb_noreturn	ev.c	891;"	d	file:
ecb_noreturn	ev.c	893;"	d	file:
ecb_popcount32	ev.c	/^  ecb_popcount32 (uint32_t x)$/;"	f
ecb_popcount32	ev.c	925;"	d	file:
ecb_popcount64	ev.c	/^ecb_popcount64 (uint64_t x)$/;"	f
ecb_prefetch	ev.c	846;"	d	file:
ecb_prefetch	ev.c	848;"	d	file:
ecb_pure	ev.c	882;"	d	file:
ecb_restrict	ev.c	806;"	d	file:
ecb_restrict	ev.c	808;"	d	file:
ecb_restrict	ev.c	810;"	d	file:
ecb_rotl16	ev.c	/^ecb_inline ecb_const uint16_t ecb_rotl16 (uint16_t x, unsigned int count) { return (x >> (16 - count)) | (x << count); }$/;"	f
ecb_rotl32	ev.c	/^ecb_inline ecb_const uint32_t ecb_rotl32 (uint32_t x, unsigned int count) { return (x >> (32 - count)) | (x << count); }$/;"	f
ecb_rotl64	ev.c	/^ecb_inline ecb_const uint64_t ecb_rotl64 (uint64_t x, unsigned int count) { return (x >> (64 - count)) | (x << count); }$/;"	f
ecb_rotl8	ev.c	/^ecb_inline ecb_const uint8_t  ecb_rotl8  (uint8_t  x, unsigned int count) { return (x >> ( 8 - count)) | (x << count); }$/;"	f
ecb_rotr16	ev.c	/^ecb_inline ecb_const uint16_t ecb_rotr16 (uint16_t x, unsigned int count) { return (x << (16 - count)) | (x >> count); }$/;"	f
ecb_rotr32	ev.c	/^ecb_inline ecb_const uint32_t ecb_rotr32 (uint32_t x, unsigned int count) { return (x << (32 - count)) | (x >> count); }$/;"	f
ecb_rotr64	ev.c	/^ecb_inline ecb_const uint64_t ecb_rotr64 (uint64_t x, unsigned int count) { return (x << (64 - count)) | (x >> count); }$/;"	f
ecb_rotr8	ev.c	/^ecb_inline ecb_const uint8_t  ecb_rotr8  (uint8_t  x, unsigned int count) { return (x << ( 8 - count)) | (x >> count); }$/;"	f
ecb_unlikely	ev.c	913;"	d	file:
ecb_unreachable	ev.c	/^  ecb_inline ecb_noreturn void ecb_unreachable (void) { }$/;"	f
ecb_unreachable	ev.c	1121;"	d	file:
ecb_unused	ev.c	880;"	d	file:
egen	ev.c	/^  unsigned int egen;    \/* generation counter to counter epoll bugs *\/$/;"	m	struct:__anon7	file:
emask	ev.c	/^  unsigned char emask;  \/* the epoll backend stores the actual kernel mask in here *\/$/;"	m	struct:__anon7	file:
embed	ev.h	/^  struct ev_embed embed;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_embed
embed_fork_cb	ev.c	/^embed_fork_cb (EV_P_ ev_fork *fork_w, int revents)$/;"	f	file:
embed_io_cb	ev.c	/^embed_io_cb (EV_P_ ev_io *io, int revents)$/;"	f	file:
embed_prepare_cb	ev.c	/^embed_prepare_cb (EV_P_ ev_prepare *prepare, int revents)$/;"	f	file:
enable_secure	ev.c	/^enable_secure (void)$/;"	f
epoll_destroy	ev_epoll.c	/^epoll_destroy (EV_P)$/;"	f
epoll_epermcnt	ev_wrap.h	123;"	d
epoll_epermcnt	ev_wrap.h	24;"	d
epoll_epermmax	ev_wrap.h	124;"	d
epoll_epermmax	ev_wrap.h	25;"	d
epoll_eperms	ev_wrap.h	125;"	d
epoll_eperms	ev_wrap.h	26;"	d
epoll_eventmax	ev_wrap.h	126;"	d
epoll_eventmax	ev_wrap.h	27;"	d
epoll_events	ev_wrap.h	127;"	d
epoll_events	ev_wrap.h	28;"	d
epoll_fork	ev_epoll.c	/^epoll_fork (EV_P)$/;"	f
epoll_init	ev_epoll.c	/^epoll_init (EV_P_ int flags)$/;"	f
epoll_modify	ev_epoll.c	/^epoll_modify (EV_P_ int fd, int oev, int nev)$/;"	f	file:
epoll_poll	ev_epoll.c	/^epoll_poll (EV_P_ ev_tstamp timeout)$/;"	f	file:
ev_active	ev.c	1550;"	d	file:
ev_any_watcher	ev.h	/^union ev_any_watcher$/;"	u
ev_arg	event.h	/^  void *ev_arg;$/;"	m	struct:event
ev_async	ev.h	/^typedef struct ev_async$/;"	s
ev_async	ev.h	/^} ev_async;$/;"	t	typeref:struct:ev_async
ev_async_init	ev.h	719;"	d
ev_async_pending	ev.h	464;"	d
ev_async_set	ev.h	705;"	d
ev_at	ev.c	1551;"	d	file:
ev_backend	ev.c	/^ev_backend (EV_P) EV_THROW$/;"	f
ev_base	event.h	/^  struct event_base *ev_base;$/;"	m	struct:event	typeref:struct:event::event_base
ev_callback	event.h	/^  event_callback_fn ev_callback;$/;"	m	struct:event
ev_cb	ev.h	725;"	d
ev_cb_	ev.h	724;"	d
ev_check	ev.h	/^typedef struct ev_check$/;"	s
ev_check	ev.h	/^} ev_check;$/;"	t	typeref:struct:ev_check
ev_check_2625	ev.c	/^ev_check_2625 (EV_P)$/;"	f
ev_check_init	ev.h	715;"	d
ev_check_set	ev.h	701;"	d
ev_child	ev.h	/^typedef struct ev_child$/;"	s
ev_child	ev.h	/^} ev_child;$/;"	t	typeref:struct:ev_child
ev_child_init	ev.h	711;"	d
ev_child_set	ev.h	697;"	d
ev_cleanup	ev.h	/^typedef struct ev_cleanup$/;"	s
ev_cleanup	ev.h	/^} ev_cleanup;$/;"	t	typeref:struct:ev_cleanup
ev_cleanup_init	ev.h	718;"	d
ev_cleanup_set	ev.h	704;"	d
ev_default_destroy	ev.h	/^    EV_INLINE void ev_default_destroy (void) { ev_loop_destroy (EV_DEFAULT); }$/;"	f
ev_default_fork	ev.h	/^    EV_INLINE void ev_default_fork    (void) { ev_loop_fork    (EV_DEFAULT); }$/;"	f
ev_default_loop_ptr	ev.c	/^  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; \/* needs to be initialised to make it a definition despite extern *\/$/;"	v	typeref:struct:ev_loop
ev_default_loop_ptr	ev.c	/^  static int ev_default_loop_ptr;$/;"	v	file:
ev_default_loop_ptr	ev.h	/^EV_API_DECL struct ev_loop *ev_default_loop_ptr;$/;"	v	typeref:struct:ev_loop
ev_depth	ev.c	/^ev_depth (EV_P) EV_THROW$/;"	f
ev_embed	ev.h	/^typedef struct ev_embed$/;"	s
ev_embed	ev.h	/^} ev_embed;$/;"	t	typeref:struct:ev_embed
ev_embed_init	ev.h	716;"	d
ev_embed_set	ev.h	702;"	d
ev_events	event.h	/^  short ev_events;$/;"	m	struct:event
ev_fd	event.h	/^  int ev_fd;$/;"	m	struct:event
ev_flags	event.h	/^  int ev_flags;$/;"	m	struct:event
ev_floor	ev.c	/^ev_floor (ev_tstamp v)$/;"	f	file:
ev_floor	ev.c	1583;"	d	file:
ev_fork	ev.h	/^typedef struct ev_fork$/;"	s
ev_fork	ev.h	/^} ev_fork;$/;"	t	typeref:struct:ev_fork
ev_fork_init	ev.h	717;"	d
ev_fork_set	ev.h	703;"	d
ev_free	ev.c	1751;"	d	file:
ev_idle	ev.h	/^typedef struct ev_idle$/;"	s
ev_idle	ev.h	/^} ev_idle;$/;"	t	typeref:struct:ev_idle
ev_idle_init	ev.h	713;"	d
ev_idle_set	ev.h	699;"	d
ev_init	ev.h	686;"	d
ev_invoke	ev.c	/^ev_invoke (EV_P_ void *w, int revents)$/;"	f
ev_invoke_pending	ev.c	/^ev_invoke_pending (EV_P)$/;"	f
ev_io	ev.h	/^typedef struct ev_io$/;"	s
ev_io	ev.h	/^} ev_io;$/;"	t	typeref:struct:ev_io
ev_io_init	ev.h	707;"	d
ev_io_set	ev.h	693;"	d
ev_is_active	ev.h	722;"	d
ev_is_pending	ev.h	721;"	d
ev_iteration	ev.c	/^ev_iteration (EV_P) EV_THROW$/;"	f
ev_linux_version	ev.c	/^ev_linux_version (void)$/;"	f	file:
ev_loop	ev.c	/^  struct ev_loop$/;"	s	file:
ev_loop	ev.h	/^    EV_INLINE void ev_loop   (EV_P_ int flags) { ev_run   (EV_A_ flags); }$/;"	f
ev_loop	ev.h	/^  typedef struct ev_loop ev_loop;$/;"	t	typeref:struct:ev_loop
ev_loop_callback	ev.h	/^typedef void (*ev_loop_callback)(EV_P);$/;"	t
ev_loop_count	ev.h	/^      EV_INLINE unsigned int ev_loop_count  (EV_P) { return ev_iteration  (EV_A); }$/;"	f
ev_loop_depth	ev.h	/^      EV_INLINE unsigned int ev_loop_depth  (EV_P) { return ev_depth      (EV_A); }$/;"	f
ev_loop_destroy	ev.c	/^ev_loop_destroy (EV_P)$/;"	f
ev_loop_fork	ev.c	/^ev_loop_fork (EV_P) EV_THROW$/;"	f
ev_loop_verify	ev.h	/^      EV_INLINE void         ev_loop_verify (EV_P) {        ev_verify     (EV_A); }$/;"	f
ev_malloc	ev.c	1750;"	d	file:
ev_now	ev.c	/^ev_now (EV_P) EV_THROW$/;"	f
ev_now_update	ev.c	/^ev_now_update (EV_P) EV_THROW$/;"	f
ev_once	ev.c	/^struct ev_once$/;"	s	file:
ev_pending_count	ev.c	/^ev_pending_count (EV_P) EV_THROW$/;"	f
ev_periodic	ev.h	/^typedef struct ev_periodic$/;"	s
ev_periodic	ev.h	/^} ev_periodic;$/;"	t	typeref:struct:ev_periodic
ev_periodic_at	ev.h	735;"	d
ev_periodic_init	ev.h	709;"	d
ev_periodic_set	ev.h	695;"	d
ev_prepare	ev.h	/^typedef struct ev_prepare$/;"	s
ev_prepare	ev.h	/^} ev_prepare;$/;"	t	typeref:struct:ev_prepare
ev_prepare_init	ev.h	714;"	d
ev_prepare_set	ev.h	700;"	d
ev_pri	event.h	/^  int ev_pri;$/;"	m	struct:event
ev_printerr	ev.c	/^ev_printerr (const char *msg)$/;"	f	file:
ev_priority	ev.h	728;"	d
ev_priority	ev.h	731;"	d
ev_realloc	ev.c	/^ev_realloc (void *ptr, long size)$/;"	f
ev_ref	ev.c	/^ev_ref (EV_P) EV_THROW$/;"	f
ev_res	event.h	/^  int ev_res;$/;"	m	struct:event
ev_resume	ev.c	/^ev_resume (EV_P) EV_THROW$/;"	f
ev_rt_now	ev.c	/^    ev_tstamp ev_rt_now;$/;"	m	struct:ev_loop	file:
ev_rt_now	ev.c	/^  EV_API_DECL ev_tstamp ev_rt_now = 0; \/* needs to be initialised to make it a definition despite extern *\/$/;"	v
ev_rt_now	ev.c	1817;"	d	file:
ev_rt_now	ev.h	/^EV_API_DECL ev_tstamp ev_rt_now;$/;"	v
ev_run	ev.c	/^ev_run (EV_P_ int flags)$/;"	f
ev_set_cb	ev.h	738;"	d
ev_set_priority	ev.h	729;"	d
ev_set_priority	ev.h	732;"	d
ev_sighandler	ev.c	/^ev_sighandler (int signum)$/;"	f	file:
ev_signal	ev.h	/^typedef struct ev_signal$/;"	s
ev_signal	ev.h	/^} ev_signal;$/;"	t	typeref:struct:ev_signal
ev_signal_init	ev.h	710;"	d
ev_signal_set	ev.h	696;"	d
ev_start	ev.c	/^ev_start (EV_P_ W w, int active)$/;"	f
ev_stat	ev.h	/^typedef struct ev_stat$/;"	s
ev_stat	ev.h	/^} ev_stat;$/;"	t	typeref:struct:ev_stat
ev_stat_init	ev.h	712;"	d
ev_stat_set	ev.h	698;"	d
ev_statdata	ev.h	/^typedef struct _stati64 ev_statdata;$/;"	t	typeref:struct:_stati64
ev_statdata	ev.h	/^typedef struct stat ev_statdata;$/;"	t	typeref:struct:stat
ev_stop	ev.c	/^ev_stop (EV_P_ W w)$/;"	f
ev_suspend	ev.c	/^ev_suspend (EV_P) EV_THROW$/;"	f
ev_syserr	ev.c	/^ev_syserr (const char *msg)$/;"	f	file:
ev_timer	ev.h	/^typedef struct ev_timer$/;"	s
ev_timer	ev.h	/^} ev_timer;$/;"	t	typeref:struct:ev_timer
ev_timer_init	ev.h	708;"	d
ev_timer_set	ev.h	694;"	d
ev_tstamp	ev.h	/^typedef double ev_tstamp;$/;"	t
ev_tv_get	event.c	/^ev_tv_get (struct timeval *tv)$/;"	f	file:
ev_unloop	ev.h	/^    EV_INLINE void ev_unloop (EV_P_ int how  ) { ev_break (EV_A_ how  ); }$/;"	f
ev_unref	ev.c	/^ev_unref (EV_P) EV_THROW$/;"	f
ev_userdata	ev.c	/^ev_userdata (EV_P) EV_THROW$/;"	f
ev_verify	ev.c	/^ev_verify (EV_P) EV_THROW$/;"	f
ev_watcher	ev.h	/^typedef struct ev_watcher$/;"	s
ev_watcher	ev.h	/^} ev_watcher;$/;"	t	typeref:struct:ev_watcher
ev_watcher_list	ev.h	/^typedef struct ev_watcher_list$/;"	s
ev_watcher_list	ev.h	/^} ev_watcher_list;$/;"	t	typeref:struct:ev_watcher_list
ev_watcher_time	ev.h	/^typedef struct ev_watcher_time$/;"	s
ev_watcher_time	ev.h	/^} ev_watcher_time;$/;"	t	typeref:struct:ev_watcher_time
ev_x_cb	event.c	/^ev_x_cb (struct event *ev, int revents)$/;"	f	file:
ev_x_cb_io	event.c	/^ev_x_cb_io (EV_P_ struct ev_io *w, int revents)$/;"	f	file:
ev_x_cb_sig	event.c	/^ev_x_cb_sig (EV_P_ struct ev_signal *w, int revents)$/;"	f	file:
ev_x_cb_to	event.c	/^ev_x_cb_to (EV_P_ struct ev_timer *w, int revents)$/;"	f	file:
ev_x_cur	event.c	/^static struct event_base *ev_x_cur;$/;"	v	typeref:struct:event_base	file:
ev_x_loopexit_cb	event.c	/^ev_x_loopexit_cb (int revents, void *base)$/;"	f	file:
ev_x_once	event.c	/^struct ev_x_once$/;"	s	file:
ev_x_once_cb	event.c	/^ev_x_once_cb (int revents, void *arg)$/;"	f	file:
event	event.h	/^struct event$/;"	s
event_active	event.c	/^void event_active (struct event *ev, int res, short ncalls)$/;"	f
event_add	event.c	/^int event_add (struct event *ev, struct timeval *tv)$/;"	f
event_base	event.c	/^struct event_base$/;"	s	file:
event_base_dispatch	event.c	/^int event_base_dispatch (struct event_base *base)$/;"	f
event_base_free	event.c	/^void event_base_free (struct event_base *base)$/;"	f
event_base_get_method	event.c	/^event_base_get_method (const struct event_base *base)$/;"	f
event_base_loop	event.c	/^int event_base_loop (struct event_base *base, int flags)$/;"	f
event_base_loopexit	event.c	/^int event_base_loopexit (struct event_base *base, struct timeval *tv)$/;"	f
event_base_new	event.c	/^event_base_new (void)$/;"	f
event_base_once	event.c	/^int event_base_once (struct event_base *base, int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv)$/;"	f
event_base_priority_init	event.c	/^int event_base_priority_init (struct event_base *base, int npri)$/;"	f
event_base_set	event.c	/^int event_base_set (struct event_base *base, struct event *ev)$/;"	f
event_callback_fn	event.h	/^typedef void (*event_callback_fn)(int, short, void *);$/;"	t
event_del	event.c	/^int event_del (struct event *ev)$/;"	f
event_dispatch	event.c	/^int event_dispatch (void)$/;"	f
event_get_callback	event.c	/^event_callback_fn event_get_callback$/;"	f
event_get_method	event.c	/^event_get_method (void)$/;"	f
event_get_version	event.c	/^event_get_version (void)$/;"	f
event_init	event.c	/^void *event_init (void)$/;"	f
event_initialized	event.h	110;"	d
event_log_cb	event.h	/^typedef void (*event_log_cb)(int severity, const char *msg);$/;"	t
event_loop	event.c	/^int event_loop (int flags)$/;"	f
event_loopexit	event.c	/^int event_loopexit (struct timeval *tv)$/;"	f
event_once	event.c	/^int event_once (int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv)$/;"	f
event_pending	event.c	/^int event_pending (struct event *ev, short events, struct timeval *tv)$/;"	f
event_priority_init	event.c	/^int event_priority_init (int npri)$/;"	f
event_priority_set	event.c	/^int event_priority_set (struct event *ev, int pri)$/;"	f
event_set	event.c	/^void event_set (struct event *ev, int fd, short events, void (*cb)(int, short, void *), void *arg)$/;"	f
event_set_log_callback	event.c	/^void event_set_log_callback (event_log_cb cb)$/;"	f
events	ev.c	/^  int events; \/* the pending event set for the given watcher *\/$/;"	m	struct:__anon8	file:
events	ev.c	/^  unsigned char events; \/* the events watched for *\/$/;"	m	struct:__anon7	file:
events	ev.h	/^  int events; \/* ro *\/$/;"	m	struct:ev_io
evpipe	ev_wrap.h	128;"	d
evpipe	ev_wrap.h	29;"	d
evpipe_init	ev.c	/^evpipe_init (EV_P)$/;"	f	file:
evpipe_write	ev.c	/^evpipe_write (EV_P_ EV_ATOMIC_T *flag)$/;"	f
evtimer_add	event.h	112;"	d
evtimer_del	event.h	114;"	d
evtimer_initialized	event.h	116;"	d
evtimer_pending	event.h	115;"	d
evtimer_set	event.h	113;"	d
expect_false	ev.c	1523;"	d	file:
expect_true	ev.c	1524;"	d	file:
fd	ev.h	/^  int fd;     \/* ro *\/$/;"	m	struct:ev_io
fd	event.c	/^  int fd;$/;"	m	struct:ev_x_once	file:
fd_change	ev.c	/^fd_change (EV_P_ int fd, int flags)$/;"	f
fd_ebadf	ev.c	/^fd_ebadf (EV_P)$/;"	f	file:
fd_enomem	ev.c	/^fd_enomem (EV_P)$/;"	f	file:
fd_event	ev.c	/^fd_event (EV_P_ int fd, int revents)$/;"	f
fd_event_nocheck	ev.c	/^fd_event_nocheck (EV_P_ int fd, int revents)$/;"	f
fd_intern	ev.c	/^fd_intern (int fd)$/;"	f
fd_kill	ev.c	/^fd_kill (EV_P_ int fd)$/;"	f
fd_rearm_all	ev.c	/^fd_rearm_all (EV_P)$/;"	f	file:
fd_reify	ev.c	/^fd_reify (EV_P)$/;"	f
fd_valid	ev.c	/^fd_valid (int fd)$/;"	f
fdchangecnt	ev_wrap.h	129;"	d
fdchangecnt	ev_wrap.h	30;"	d
fdchangemax	ev_wrap.h	130;"	d
fdchangemax	ev_wrap.h	31;"	d
fdchanges	ev_wrap.h	131;"	d
fdchanges	ev_wrap.h	32;"	d
feed_reverse	ev.c	/^feed_reverse (EV_P_ W w)$/;"	f
feed_reverse_done	ev.c	/^feed_reverse_done (EV_P_ int revents)$/;"	f
flags	ev.h	/^  int flags;   \/* private *\/$/;"	m	struct:ev_child
fork	ev.h	/^  ev_fork fork;          \/* private *\/$/;"	m	struct:ev_embed
fork	ev.h	/^  struct ev_fork fork;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_fork
forkcnt	ev_wrap.h	132;"	d
forkcnt	ev_wrap.h	33;"	d
forkmax	ev_wrap.h	133;"	d
forkmax	ev_wrap.h	34;"	d
forks	ev_wrap.h	134;"	d
forks	ev_wrap.h	35;"	d
fs_2625	ev_wrap.h	135;"	d
fs_2625	ev_wrap.h	36;"	d
fs_fd	ev_wrap.h	136;"	d
fs_fd	ev_wrap.h	37;"	d
fs_hash	ev_wrap.h	137;"	d
fs_hash	ev_wrap.h	38;"	d
fs_w	ev_wrap.h	138;"	d
fs_w	ev_wrap.h	39;"	d
get_clock	ev.c	/^get_clock (void)$/;"	f
handle	ev.c	/^  SOCKET handle;$/;"	m	struct:__anon7	file:
have_monotonic	ev.c	/^static EV_ATOMIC_T have_monotonic; \/* did clock_gettime (CLOCK_MONOTONIC) work? *\/$/;"	v	file:
have_realtime	ev.c	/^static EV_ATOMIC_T have_realtime; \/* did clock_gettime (CLOCK_REALTIME) work? *\/$/;"	v	file:
head	ev.c	/^  WL head;$/;"	m	struct:__anon11	file:
head	ev.c	/^  WL head;$/;"	m	struct:__anon7	file:
head	ev.c	/^  WL head;$/;"	m	struct:__anon9	file:
idle	ev.h	/^  ev_idle idle;          \/* unused *\/$/;"	m	struct:ev_embed
idle	ev.h	/^  struct ev_idle idle;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_idle
idle_reify	ev.c	/^idle_reify (EV_P)$/;"	f
idleall	ev_wrap.h	139;"	d
idleall	ev_wrap.h	40;"	d
idlecnt	ev_wrap.h	140;"	d
idlecnt	ev_wrap.h	41;"	d
idlemax	ev_wrap.h	141;"	d
idlemax	ev_wrap.h	42;"	d
idles	ev_wrap.h	142;"	d
idles	ev_wrap.h	43;"	d
infy_add	ev.c	/^infy_add (EV_P_ ev_stat *w)$/;"	f	file:
infy_cb	ev.c	/^infy_cb (EV_P_ ev_io *w, int revents)$/;"	f	file:
infy_del	ev.c	/^infy_del (EV_P_ ev_stat *w)$/;"	f	file:
infy_fork	ev.c	/^infy_fork (EV_P)$/;"	f
infy_init	ev.c	/^infy_init (EV_P)$/;"	f
infy_newfd	ev.c	/^infy_newfd (void)$/;"	f
infy_wd	ev.c	/^infy_wd (EV_P_ int slot, int wd, struct inotify_event *ev)$/;"	f	file:
inline_size	ev.c	1527;"	d	file:
inline_speed	ev.c	1530;"	d	file:
inline_speed	ev.c	1532;"	d	file:
int16_t	ev.c	/^  typedef   signed short  int16_t;$/;"	t	file:
int32_t	ev.c	/^  typedef   signed int    int32_t;$/;"	t	file:
int64_t	ev.c	/^    typedef   signed __int64   int64_t;$/;"	t	file:
int64_t	ev.c	/^    typedef   signed long long int64_t;$/;"	t	file:
int8_t	ev.c	/^  typedef   signed char   int8_t;$/;"	t	file:
interval	ev.h	/^  ev_tstamp interval; \/* ro *\/$/;"	m	struct:ev_stat
interval	ev.h	/^  ev_tstamp interval; \/* rw *\/$/;"	m	struct:ev_periodic
intptr_t	ev.c	/^    typedef  int32_t  intptr_t;$/;"	t	file:
intptr_t	ev.c	/^    typedef  int64_t  intptr_t;$/;"	t	file:
invoke_cb	ev_wrap.h	143;"	d
invoke_cb	ev_wrap.h	44;"	d
io	ev.c	/^  ev_io io;$/;"	m	struct:ev_once	file:
io	ev.h	/^  ev_io io;              \/* private *\/$/;"	m	struct:ev_embed
io	ev.h	/^  struct ev_io io;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_io
io	event.h	/^    struct ev_io io;$/;"	m	union:event::__anon1	typeref:struct:event::__anon1::ev_io
io_blocktime	ev_wrap.h	144;"	d
io_blocktime	ev_wrap.h	45;"	d
iocp	ev_wrap.h	145;"	d
iocp	ev_wrap.h	46;"	d
iosig	event.h	/^  } iosig;$/;"	m	struct:event	typeref:union:event::__anon1
kqueue_change	ev_kqueue.c	/^kqueue_change (EV_P_ int fd, int filter, int flags, int fflags)$/;"	f
kqueue_changecnt	ev_wrap.h	146;"	d
kqueue_changecnt	ev_wrap.h	47;"	d
kqueue_changemax	ev_wrap.h	147;"	d
kqueue_changemax	ev_wrap.h	48;"	d
kqueue_changes	ev_wrap.h	148;"	d
kqueue_changes	ev_wrap.h	49;"	d
kqueue_destroy	ev_kqueue.c	/^kqueue_destroy (EV_P)$/;"	f
kqueue_eventmax	ev_wrap.h	149;"	d
kqueue_eventmax	ev_wrap.h	50;"	d
kqueue_events	ev_wrap.h	150;"	d
kqueue_events	ev_wrap.h	51;"	d
kqueue_fd_pid	ev_wrap.h	151;"	d
kqueue_fd_pid	ev_wrap.h	52;"	d
kqueue_fork	ev_kqueue.c	/^kqueue_fork (EV_P)$/;"	f
kqueue_init	ev_kqueue.c	/^kqueue_init (EV_P_ int flags)$/;"	f
kqueue_modify	ev_kqueue.c	/^kqueue_modify (EV_P_ int fd, int oev, int nev)$/;"	f	file:
kqueue_poll	ev_kqueue.c	/^kqueue_poll (EV_P_ ev_tstamp timeout)$/;"	f	file:
loop_count	ev_wrap.h	152;"	d
loop_count	ev_wrap.h	53;"	d
loop_depth	ev_wrap.h	153;"	d
loop_depth	ev_wrap.h	54;"	d
loop_done	ev_wrap.h	154;"	d
loop_done	ev_wrap.h	55;"	d
loop_fork	ev.c	/^loop_fork (EV_P)$/;"	f
lstat	ev.c	4194;"	d	file:
lstat	ev.c	4195;"	d	file:
mn_now	ev_wrap.h	155;"	d
mn_now	ev_wrap.h	56;"	d
noinline	ev.c	1525;"	d	file:
now_floor	ev_wrap.h	156;"	d
now_floor	ev_wrap.h	57;"	d
offset	ev.h	/^  ev_tstamp offset; \/* rw *\/$/;"	m	struct:ev_periodic
once_cb	ev.c	/^once_cb (EV_P_ struct ev_once *once, int revents)$/;"	f	file:
once_cb_io	ev.c	/^once_cb_io (EV_P_ ev_io *w, int revents)$/;"	f	file:
once_cb_to	ev.c	/^once_cb_to (EV_P_ ev_timer *w, int revents)$/;"	f	file:
or	ev.c	/^  OVERLAPPED or, ow;$/;"	m	struct:__anon7	file:
origflags	ev_wrap.h	157;"	d
origflags	ev_wrap.h	58;"	d
other	ev.h	/^  struct ev_loop *other; \/* ro *\/$/;"	m	struct:ev_embed	typeref:struct:ev_embed::ev_loop
ow	ev.c	/^  OVERLAPPED or, ow;$/;"	m	struct:__anon7	file:
pad	ev.c	/^  char pad[128 - sizeof (uint32_t)];$/;"	m	struct:signalfd_siginfo	file:
path	ev.h	/^  const char *path;   \/* ro *\/$/;"	m	struct:ev_stat
pending	ev.c	/^  EV_ATOMIC_T pending;$/;"	m	struct:__anon11	file:
pending_w	ev_wrap.h	158;"	d
pending_w	ev_wrap.h	59;"	d
pendingcb	ev.c	/^pendingcb (EV_P_ ev_prepare *w, int revents)$/;"	f	file:
pendingcnt	ev_wrap.h	159;"	d
pendingcnt	ev_wrap.h	60;"	d
pendingmax	ev_wrap.h	160;"	d
pendingmax	ev_wrap.h	61;"	d
pendingpri	ev_wrap.h	161;"	d
pendingpri	ev_wrap.h	62;"	d
pendings	ev_wrap.h	162;"	d
pendings	ev_wrap.h	63;"	d
periodic	ev.h	/^  ev_periodic periodic;  \/* unused *\/$/;"	m	struct:ev_embed
periodic	ev.h	/^  struct ev_periodic periodic;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_periodic
periodic_recalc	ev.c	/^periodic_recalc (EV_P_ ev_periodic *w)$/;"	f	file:
periodiccnt	ev_wrap.h	163;"	d
periodiccnt	ev_wrap.h	64;"	d
periodicmax	ev_wrap.h	164;"	d
periodicmax	ev_wrap.h	65;"	d
periodics	ev_wrap.h	165;"	d
periodics	ev_wrap.h	66;"	d
periodics_reify	ev.c	/^periodics_reify (EV_P)$/;"	f
periodics_reschedule	ev.c	/^periodics_reschedule (EV_P)$/;"	f	file:
pid	ev.h	/^  int pid;     \/* ro *\/$/;"	m	struct:ev_child
pipe_w	ev_wrap.h	166;"	d
pipe_w	ev_wrap.h	67;"	d
pipe_write_skipped	ev_wrap.h	167;"	d
pipe_write_skipped	ev_wrap.h	68;"	d
pipe_write_wanted	ev_wrap.h	168;"	d
pipe_write_wanted	ev_wrap.h	69;"	d
pipecb	ev.c	/^pipecb (EV_P_ ev_io *iow, int revents)$/;"	f	file:
poll_destroy	ev_poll.c	/^poll_destroy (EV_P)$/;"	f
poll_init	ev_poll.c	/^poll_init (EV_P_ int flags)$/;"	f
poll_modify	ev_poll.c	/^poll_modify (EV_P_ int fd, int oev, int nev)$/;"	f	file:
poll_poll	ev_poll.c	/^poll_poll (EV_P_ ev_tstamp timeout)$/;"	f	file:
pollcnt	ev_wrap.h	169;"	d
pollcnt	ev_wrap.h	70;"	d
pollidx_init	ev_poll.c	/^pollidx_init (int *base, int count)$/;"	f
pollidxmax	ev_wrap.h	170;"	d
pollidxmax	ev_wrap.h	71;"	d
pollidxs	ev_wrap.h	171;"	d
pollidxs	ev_wrap.h	72;"	d
pollmax	ev_wrap.h	172;"	d
pollmax	ev_wrap.h	73;"	d
polls	ev_wrap.h	173;"	d
polls	ev_wrap.h	74;"	d
port_associate_and_check	ev_port.c	/^port_associate_and_check (EV_P_ int fd, int ev)$/;"	f
port_destroy	ev_port.c	/^port_destroy (EV_P)$/;"	f
port_eventmax	ev_wrap.h	174;"	d
port_eventmax	ev_wrap.h	75;"	d
port_events	ev_wrap.h	175;"	d
port_events	ev_wrap.h	76;"	d
port_fork	ev_port.c	/^port_fork (EV_P)$/;"	f
port_init	ev_port.c	/^port_init (EV_P_ int flags)$/;"	f
port_modify	ev_port.c	/^port_modify (EV_P_ int fd, int oev, int nev)$/;"	f	file:
port_poll	ev_port.c	/^port_poll (EV_P_ ev_tstamp timeout)$/;"	f	file:
postfork	ev_wrap.h	176;"	d
postfork	ev_wrap.h	77;"	d
prepare	ev.h	/^  ev_prepare prepare;    \/* private *\/$/;"	m	struct:ev_embed
prepare	ev.h	/^  struct ev_prepare prepare;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_prepare
preparecnt	ev_wrap.h	177;"	d
preparecnt	ev_wrap.h	78;"	d
preparemax	ev_wrap.h	178;"	d
preparemax	ev_wrap.h	79;"	d
prepares	ev_wrap.h	179;"	d
prepares	ev_wrap.h	80;"	d
prev	ev.h	/^  ev_statdata prev;   \/* ro *\/$/;"	m	struct:ev_stat
pri_adjust	ev.c	/^pri_adjust (EV_P_ W w)$/;"	f
queue_events	ev.c	/^queue_events (EV_P_ W *events, int eventcnt, int type)$/;"	f
reheap	ev.c	/^reheap (ANHE *heap, int N)$/;"	f
reify	ev.c	/^  unsigned char reify;  \/* flag set when this ANFD needs reification (EV_ANFD_REIFY, EV__IOFDSET) *\/$/;"	m	struct:__anon7	file:
release_cb	ev_wrap.h	180;"	d
release_cb	ev_wrap.h	81;"	d
repeat	ev.h	/^  ev_tstamp repeat; \/* rw *\/$/;"	m	struct:ev_timer
rfeedcnt	ev_wrap.h	181;"	d
rfeedcnt	ev_wrap.h	82;"	d
rfeedmax	ev_wrap.h	182;"	d
rfeedmax	ev_wrap.h	83;"	d
rfeeds	ev_wrap.h	183;"	d
rfeeds	ev_wrap.h	84;"	d
rpid	ev.h	/^  int rpid;    \/* rw, holds the received pid *\/$/;"	m	struct:ev_child
rstatus	ev.h	/^  int rstatus; \/* rw, holds the exit status, use the macros from sys\/wait.h *\/$/;"	m	struct:ev_child
rtmn_diff	ev_wrap.h	184;"	d
rtmn_diff	ev_wrap.h	85;"	d
select_destroy	ev_select.c	/^select_destroy (EV_P)$/;"	f
select_init	ev_select.c	/^select_init (EV_P_ int flags)$/;"	f
select_modify	ev_select.c	/^select_modify (EV_P_ int fd, int oev, int nev)$/;"	f	file:
select_poll	ev_select.c	/^select_poll (EV_P_ ev_tstamp timeout)$/;"	f	file:
sent	ev.h	/^  EV_ATOMIC_T sent; \/* private *\/$/;"	m	struct:ev_async
sig	event.h	/^    struct ev_signal sig;$/;"	m	union:event::__anon1	typeref:struct:event::__anon1::ev_signal
sig_pending	ev_wrap.h	185;"	d
sig_pending	ev_wrap.h	86;"	d
sigfd	ev_wrap.h	186;"	d
sigfd	ev_wrap.h	87;"	d
sigfd_set	ev_wrap.h	187;"	d
sigfd_set	ev_wrap.h	88;"	d
sigfd_w	ev_wrap.h	188;"	d
sigfd_w	ev_wrap.h	89;"	d
sigfdcb	ev.c	/^sigfdcb (EV_P_ ev_io *iow, int revents)$/;"	f	file:
signal	ev.h	/^  struct ev_signal signal;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_signal
signal_add	event.h	124;"	d
signal_del	event.h	126;"	d
signal_initialized	event.h	128;"	d
signal_pending	event.h	127;"	d
signal_set	event.h	125;"	d
signalfd_siginfo	ev.c	/^struct signalfd_siginfo$/;"	s	file:
signals	ev.c	/^static ANSIG signals [EV_NSIG - 1];$/;"	v	file:
signum	ev.h	/^  int signum; \/* ro *\/$/;"	m	struct:ev_signal
ssi_signo	ev.c	/^  uint32_t ssi_signo;$/;"	m	struct:signalfd_siginfo	file:
stat	ev.h	/^  struct ev_stat stat;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_stat
stat_timer_cb	ev.c	/^stat_timer_cb (EV_P_ ev_timer *w_, int revents)$/;"	f	file:
time_update	ev.c	/^time_update (EV_P_ ev_tstamp max_block)$/;"	f
timeout_add	event.h	118;"	d
timeout_blocktime	ev_wrap.h	189;"	d
timeout_blocktime	ev_wrap.h	90;"	d
timeout_del	event.h	120;"	d
timeout_initialized	event.h	122;"	d
timeout_pending	event.h	121;"	d
timeout_set	event.h	119;"	d
timer	ev.h	/^  ev_timer timer;        \/* unused *\/$/;"	m	struct:ev_embed
timer	ev.h	/^  ev_timer timer;     \/* private *\/$/;"	m	struct:ev_stat
timer	ev.h	/^  struct ev_timer timer;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_timer
timercnt	ev_wrap.h	190;"	d
timercnt	ev_wrap.h	91;"	d
timermax	ev_wrap.h	191;"	d
timermax	ev_wrap.h	92;"	d
timers	ev_wrap.h	192;"	d
timers	ev_wrap.h	93;"	d
timers_reify	ev.c	/^timers_reify (EV_P)$/;"	f
timers_reschedule	ev.c	/^timers_reschedule (EV_P_ ev_tstamp adjust)$/;"	f	file:
to	ev.c	/^  ev_timer to;$/;"	m	struct:ev_once	file:
to	event.h	/^  struct ev_timer to;$/;"	m	struct:event	typeref:struct:event::ev_timer
type	ev.c	/^  template<class T> struct ecb_decltype_t { typedef T type; };$/;"	t	struct:ecb_decltype_t	file:
uint16_t	ev.c	/^  typedef unsigned short uint16_t;$/;"	t	file:
uint32_t	ev.c	/^  typedef unsigned int   uint32_t;$/;"	t	file:
uint64_t	ev.c	/^    typedef unsigned __int64   uint64_t;$/;"	t	file:
uint64_t	ev.c	/^    typedef unsigned long long uint64_t;$/;"	t	file:
uint8_t	ev.c	/^  typedef unsigned char  uint8_t;$/;"	t	file:
uintptr_t	ev.c	/^    typedef uint32_t uintptr_t;$/;"	t	file:
uintptr_t	ev.c	/^    typedef uint64_t uintptr_t;$/;"	t	file:
unused	ev.c	/^  unsigned char unused;$/;"	m	struct:__anon7	file:
upheap	ev.c	/^upheap (ANHE *heap, int k)$/;"	f
userdata	ev_wrap.h	193;"	d
userdata	ev_wrap.h	94;"	d
vec_eo	ev_wrap.h	194;"	d
vec_eo	ev_wrap.h	95;"	d
vec_max	ev_wrap.h	195;"	d
vec_max	ev_wrap.h	96;"	d
vec_ri	ev_wrap.h	196;"	d
vec_ri	ev_wrap.h	97;"	d
vec_ro	ev_wrap.h	197;"	d
vec_ro	ev_wrap.h	98;"	d
vec_wi	ev_wrap.h	198;"	d
vec_wi	ev_wrap.h	99;"	d
vec_wo	ev_wrap.h	100;"	d
vec_wo	ev_wrap.h	199;"	d
verify_heap	ev.c	/^verify_heap (EV_P_ ANHE *heap, int N)$/;"	f	file:
verify_watcher	ev.c	/^verify_watcher (EV_P_ W w)$/;"	f	file:
w	ev.c	/^    WT w;$/;"	m	struct:__anon10	file:
w	ev.c	/^  W w;$/;"	m	struct:__anon8	file:
w	ev.h	/^  struct ev_watcher w;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_watcher
wd	ev.h	/^  int wd; \/* wd for inotify, fd for kqueue *\/$/;"	m	struct:ev_stat
wl	ev.h	/^  struct ev_watcher_list wl;$/;"	m	union:ev_any_watcher	typeref:struct:ev_any_watcher::ev_watcher_list
wlist_add	ev.c	/^wlist_add (WL *head, WL elem)$/;"	f
wlist_del	ev.c	/^wlist_del (WL *head, WL elem)$/;"	f
